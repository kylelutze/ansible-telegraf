# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)

# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"
{% if telegraf_global_tags is defined and telegraf_global_tags != None %}
{% for key, value in telegraf_global_tags.iteritems()%}
  {{ key }} = "{{ value }}"
{% endfor %}
{% endif %}

# Configuration for telegraf agent
[agent]
  # Default data collection interval for all plugins
  interval = "{{ telegraf_agent_interval }}"
  # Rounds collection interval to 'interval'
  # ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = {{ telegraf_round_interval }}

  ## Telegraf will cache metric_buffer_limit metrics for each output, and will
  ## flush this buffer on a successful write.
  metric_buffer_limit = {{ telegraf_metric_buffer_limit }}
  ## Flush the buffer whenever full, regardless of flush_interval.
  flush_buffer_when_full = {{ telegraf_flush_buffer_when_full }}
  
  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "{{ telegraf_collection_jitter }}"
  
  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "{{ telegraf_flush_interval }}"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "{{ telegraf_flush_jitter }}"

  ## Run telegraf in debug mode
  debug = {{ telegraf_debug }}
  ## Run telegraf in quiet mode
  quiet = {{ telegraf_quiet }}
  ## Override default hostname, if empty use os.Hostname()
{% if telegraf_hostname is defined and telegraf_hostname != None %}
  hostname = "{{ telegraf_hostname }}"
{% else %}
  hostname = "{{ ansible_hostname }}"
{% endif %}
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = {{ telegraf_omit_hostname }}
  
###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
  ## Multiple urls can be specified as part of the same cluster,
  ## this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = [ "{{ telegraf_influxdb_urls|join('","') }}" ] # required
  ## The target database for metrics (telegraf will create it if not exists).
  database = "{{ telegraf_influxdb_database }}" # required
  ## Retention policy to write to.
  retention_policy = "{{ telegraf_retention_policy }}"
  ## Precision of writes, valid values are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
  ## note: using "s" precision greatly improves InfluxDB compression.
  precision = "{{ telegraf_influxdb_precision }}"

  ## Write timeout (for the InfluxDB client), formatted as a string.
  ## If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "{{ telegraf_influxdb_timeout }}"
{% if telegraf_influxdb_username is defined and telegraf_influxdb_username != None %}
  username = "{{ telegraf_influxdb_username }}"
{% endif %}
{% if telegraf_influxdb_password is defined and telegraf_influxdb_password != None %}
  password = "{{ telegraf_influxdb_password }}"
{% endif %}
  ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
  user_agent = "{{ telegraf_influxdb_user_agent }}"
  ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  udp_payload = {{ telegraf_influxdb_udp_payload }}

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  # insecure_skip_verify = false

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################
# TODO: currently doesn't handle empty sequences such as for inputs.docker
# TODO: currently doesn't handle nested input sections such as for inputs.httpjson

{% if telegraf_input_plugins is defined and telegraf_input_plugins != None %}
{% for plugin in telegraf_input_plugins %}
{% if plugin is string %}
[[inputs.{{plugin}}]]

{% else %}
{% for plugin_name, val in plugin.iteritems() %}
[[inputs.{{plugin_name}}]]
{% for key, value in val.iteritems() %}
{% if value is sequence and value is not string %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
{% if value == "true" or value == "false" or value is number %}
  {{ key }} = {{ value }}
{% else %}
  {{ key }} = "{{ value }}"
{% endif %}
{% endif %}
{% endfor %}
{% endfor %}

{% endif %}
{% endfor %}
{% endif %}

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################
{% if telegraf_service_input_plugins is defined and telegraf_service_input_plugins != None %}
{% for plugin in telegraf_service_input_plugins %}
{% if plugin is string %}
[[inputs.{{plugin}}]]

{% else %}
{% for plugin_name, val in plugin.iteritems() %}
[[inputs.{{plugin_name}}]]
{% for key, value in val.iteritems() %}
{% if value is sequence and value is not string %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
{% if value == "true" or value == "false" or value is number %}
  {{ key }} = {{ value }}
{% else %}
  {{ key }} = "{{ value }}"
{% endif %}
{% endif %}
{% endfor %}
{% endfor %}

{% endif %}
{% endfor %}
{% endif %}